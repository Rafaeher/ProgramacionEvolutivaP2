package presentacion;

import javax.swing.JOptionPane;

import configuracion.Configuracion;
import configuracion.Genotipo_enum;
import configuracion.Mutacion_enum;
import configuracion.Reproduccion_enum;
import configuracion.Seleccion_enum;




/**
 *
 * @author carlo
 */
public class PanelInfo extends javax.swing.JPanel
{
	private static final long serialVersionUID = -6480133611595310987L;
	private String tipo;
    /**
     * Creates new form NewJPanel
     */
    public PanelInfo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jTextFieldGeneraciones = new javax.swing.JTextField();
        jLabelSeleccion = new javax.swing.JLabel();
        jComboBoxSeleccion = new javax.swing.JComboBox<>();
        jLabelCruce = new javax.swing.JLabel();
        jComboBoxCruce = new javax.swing.JComboBox<>();
        jLabelCruceporcentaje = new javax.swing.JLabel();
        jTextFieldCruceporcentaje = new javax.swing.JTextField();
        jLabelProblema = new javax.swing.JLabel();
        jLabelPoblacion = new javax.swing.JLabel();
        jComboBoxProblemas = new javax.swing.JComboBox<>();
        jTextFieldPoblacion = new javax.swing.JTextField();
        jLabelGeneraciones = new javax.swing.JLabel();
        jButtonRun = new javax.swing.JButton();
        jLabelPrecisión = new javax.swing.JLabel();
        jTextFieldError = new javax.swing.JTextField();
        jLabelProbMutacion = new javax.swing.JLabel();
        jTextFieldProbMutacion = new javax.swing.JTextField();
        jLabelElite = new javax.swing.JLabel();
        jTextFieldElite = new javax.swing.JTextField();
        jLabelTipo = new javax.swing.JLabel();
        jComboBoxTipo = new javax.swing.JComboBox<>();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabelTipo1 = new javax.swing.JLabel();
        jComboBoxProblemas1 = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(187, 212, 238));

        jTextFieldGeneraciones.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jTextFieldGeneraciones.setToolTipText("Introduce el numero de generaciones (valor entero)");
        jTextFieldGeneraciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldGeneracionesActionPerformed(evt);
            }
        });

        jLabelSeleccion.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabelSeleccion.setText("Seleccion");

        jComboBoxSeleccion.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jComboBoxSeleccion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ruleta", "Estocastica", "Truncamiento",
        		"Torneo Deterministico", "Torneo Probabilistico" }));
        jComboBoxSeleccion.setToolTipText("Elige un método de seleccion");
        jComboBoxSeleccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSeleccionActionPerformed(evt);
            }
        });

        jLabelCruce.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabelCruce.setText("Cruce");

        jComboBoxCruce.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jComboBoxCruce.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Un punto", "Varios puntos", "Uniforme" }));
        jComboBoxCruce.setToolTipText("Selecciona un mecanismo de cruce");
        jComboBoxCruce.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jComboBoxCruce.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCruceActionPerformed(evt);
            }
        });

        jLabelCruceporcentaje.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabelCruceporcentaje.setText("Cruce %");

        jTextFieldCruceporcentaje.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jTextFieldCruceporcentaje.setToolTipText("Selecciona un porcentaje de cruce");
        jTextFieldCruceporcentaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCruceporcentajeActionPerformed(evt);
            }
        });

        jLabelProblema.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabelProblema.setText("Problema");

        jLabelPoblacion.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabelPoblacion.setText("Tamaño de la poblacion");

        jComboBoxProblemas.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jComboBoxProblemas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));
        jComboBoxProblemas.setToolTipText("Selecciona el problema a resolver");

        jTextFieldPoblacion.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jTextFieldPoblacion.setToolTipText("Introduce el tamaño de la poblacion (valor entero)");
        jTextFieldPoblacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPoblacionActionPerformed(evt);
            }
        });

        jLabelGeneraciones.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabelGeneraciones.setText("Numero de generaciones");

        jButtonRun.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jButtonRun.setText("Run");
        jButtonRun.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRunActionPerformed(evt);
            }
        });

        jLabelPrecisión.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabelPrecisión.setText("Precision");

        jTextFieldError.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jTextFieldError.setToolTipText("Selecciona un porcentaje de cruce");
        jTextFieldError.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldErrorActionPerformed(evt);
            }
        });

        jLabelProbMutacion.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabelProbMutacion.setText("Prob Mutacion");

        jTextFieldProbMutacion.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jTextFieldProbMutacion.setToolTipText("Selecciona un porcentaje de cruce");
        jTextFieldProbMutacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldProbMutacionActionPerformed(evt);
            }
        });

        jLabelElite.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabelElite.setText("Elite");

        jTextFieldElite.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jTextFieldElite.setToolTipText("Selecciona un porcentaje de cruce");
        jTextFieldElite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldProbMutacion1ActionPerformed(evt);
            }
        });

        jLabelTipo.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabelTipo.setText("Tipo");

        jComboBoxTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Binario", "Real" }));

        jCheckBox1.setText("Pop Ups");

        jLabelTipo1.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabelTipo1.setText("Parametros F5");

        jComboBoxProblemas1.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jComboBoxProblemas1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7" }));
        jComboBoxProblemas1.setToolTipText("Selecciona el problema a resolver");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabelPoblacion)
                                    .addComponent(jLabelGeneraciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextFieldGeneraciones)
                                    .addComponent(jTextFieldPoblacion)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(jLabelSeleccion))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(jButtonRun))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(jCheckBox1)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelElite)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldElite))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelPrecisión)
                                .addGap(11, 11, 11)
                                .addComponent(jTextFieldError))
                            .addComponent(jComboBoxSeleccion, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelCruce)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxCruce, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelCruceporcentaje)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldCruceporcentaje))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelProbMutacion)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldProbMutacion))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelProblema)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBoxProblemas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelTipo)
                                .addGap(39, 39, 39)
                                .addComponent(jComboBoxTipo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelTipo1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBoxProblemas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelPoblacion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldPoblacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelGeneraciones)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldGeneraciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelSeleccion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxSeleccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCruce)
                    .addComponent(jComboBoxCruce, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldCruceporcentaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCruceporcentaje))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPrecisión)
                    .addComponent(jTextFieldError, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelProbMutacion)
                    .addComponent(jTextFieldProbMutacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelElite)
                    .addComponent(jTextFieldElite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelProblema)
                    .addComponent(jComboBoxProblemas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTipo)
                    .addComponent(jComboBoxTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTipo1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxProblemas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(jButtonRun)
                .addContainerGap())
        );

        jComboBoxCruce.getAccessibleContext().setAccessibleDescription("Permite seleccionar el cruce");
    }// </editor-fold>                        

    private void jTextFieldGeneracionesActionPerformed(java.awt.event.ActionEvent evt) {                                                       
        // TODO add your handling code here:
    }                                                      

    private void jComboBoxSeleccionActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        // TODO add your handling code here:
    }                                                  

    private void jComboBoxCruceActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
    	
    }                                              

    private void jTextFieldCruceporcentajeActionPerformed(java.awt.event.ActionEvent evt) {                                                          
        // TODO add your handling code here:
    }                                                         

    private void jTextFieldPoblacionActionPerformed(java.awt.event.ActionEvent evt) {                                                    
        // TODO add your handling code here:
    }                                                   

    private void jButtonRunActionPerformed(java.awt.event.ActionEvent evt) {                                           
        if(this.jTextFieldPoblacion.getText().isEmpty() || jTextFieldGeneraciones.getText().isEmpty()
  			   || jTextFieldCruceporcentaje.getText().isEmpty() || jTextFieldError.getText().isEmpty()
  			   || this.jTextFieldProbMutacion.getText().isEmpty()) {
  		   JOptionPane.showMessageDialog(null,"Error: Faltan datos", "error", JOptionPane.ERROR_MESSAGE);
  	   }
  	   else {
  		   String tipo = (String) this.jComboBoxTipo.getSelectedItem();
	       this.tipo = tipo;
  		   int tamano_poblacion = Integer.parseInt(this.jTextFieldPoblacion.getText());
  	       int num_generaciones = Integer.parseInt(this.jTextFieldGeneraciones.getText());
  	       String seleccion = (String) this.jComboBoxSeleccion.getSelectedItem();
  	       String cruce = (String) this.jComboBoxCruce.getSelectedItem();
  	       //int cruceporcentaje = Integer.parseInt(this.jTextFieldCruceporcentaje.getText());
  	       double cruceporcentaje =Double.parseDouble(this.jTextFieldCruceporcentaje.getText());
  	       double precision =Double.parseDouble(this.jTextFieldError.getText());
  	       //double precision = Integer.parseInt(this.jTextFieldError.getText());
  	       //int prob_mutacion = Integer.parseInt(this.jTextFieldProbMutacion.getText());
  	       double prob_mutacion =Double.parseDouble(this.jTextFieldProbMutacion.getText());
  	       int problema = this.jComboBoxProblemas.getSelectedIndex();
  	       int elite = Integer.parseInt(this.jTextFieldElite.getText());
  	       //A partir de aquï¿½ no estï¿½ en NetBeans
  	       String genotipo = (String) this.jComboBoxTipo.getSelectedItem();
  	       Seleccion_enum s = getSeleccion(seleccion);
  	       Reproduccion_enum r = getReproduccion(cruce);
  	       Genotipo_enum g = getGenotipo(genotipo);
  	       Mutacion_enum m = getMutacion("");
  	       int parametrosf5 = this.jComboBoxProblemas1.getSelectedIndex() + 1;
  	       
  	       Configuracion c = new Configuracion(true,precision,num_generaciones,
				   prob_mutacion,r,m,s,g,problema,cruceporcentaje,tamano_poblacion,elite,
				   parametrosf5);
		   Controlador controlador= new Controlador();
		   System.out.println("tamaño de la poblacion" + tamano_poblacion);
		   controlador.execute(c);
  	   }
    }                                          

    private void jTextFieldErrorActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // TODO add your handling code here:
    }                                               

    private void jTextFieldProbMutacionActionPerformed(java.awt.event.ActionEvent evt) {                                                       
        // TODO add your handling code here:
    }                                                      

    private void jTextFieldProbMutacion1ActionPerformed(java.awt.event.ActionEvent evt) {                                                        
        // TODO add your handling code here:
    }                    
private Seleccion_enum getSeleccion(String s) {
  	   if(s.equalsIgnoreCase("Ruleta")) return Seleccion_enum.Ruleta;
  	   else if (s.equalsIgnoreCase("Estocastica")) return Seleccion_enum.Estocastica;
  	   else if (s.equalsIgnoreCase("Truncamiento")) return Seleccion_enum.Truncamiento;
  	   else if (s.equalsIgnoreCase("Torneo Deterministico")) return Seleccion_enum.Torneo_Deterministico;
  	   else if (s.equalsIgnoreCase("Torneo Probabilistico")) return Seleccion_enum.Torneo_Probabilistico;
  	   else return null;
     }
     
     private Reproduccion_enum getReproduccion(String s) {
  	   if(s.equalsIgnoreCase("Un punto") && 
  			   this.tipo.equalsIgnoreCase("Binario")) return Reproduccion_enum.Un_punto;
  	   else if (s.equalsIgnoreCase("Varios puntos") &&
  			 this.tipo.equalsIgnoreCase("Binario")) return Reproduccion_enum.Varios_puntos;
  	   else if (s.equalsIgnoreCase("Uniforme") && 
  			 this.tipo.equalsIgnoreCase("Binario")) return Reproduccion_enum.Uniforme;
  	   else  if(s.equalsIgnoreCase("Un punto") && 
  			   this.tipo.equalsIgnoreCase("Real")) return Reproduccion_enum.Un_punto_Real;
  	   else if (s.equalsIgnoreCase("Varios puntos") &&
  			 this.tipo.equalsIgnoreCase("Real")) return Reproduccion_enum.Varios_puntos_Real;
  	   else if (s.equalsIgnoreCase("Uniforme") && 
  			 this.tipo.equalsIgnoreCase("Real")) return Reproduccion_enum.Uniforme_Real;
  	   else return null;
     }

     private Mutacion_enum getMutacion(String s) {
    	 if(this.tipo.equalsIgnoreCase("Binario"))return Mutacion_enum.Normal;
    	 else return Mutacion_enum.Normal_Real;
     }
     
     private Genotipo_enum getGenotipo(String s){
    	 if(s.equalsIgnoreCase("Binario")) return Genotipo_enum.Binario;
    	 else if(s.equalsIgnoreCase("Real")) return Genotipo_enum.Real;
    	 else return null;
     }	

     public boolean isPopUpsSelected(){
    	 return jCheckBox1.isSelected();
     }	
     public double getError(){
    	 return Double.parseDouble(this.jTextFieldError.getText());
     }


    // Variables declaration - do not modify                     
    private javax.swing.JButton jButtonRun;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<String> jComboBoxCruce;
    private javax.swing.JComboBox<String> jComboBoxProblemas;
    private javax.swing.JComboBox<String> jComboBoxProblemas1;
    private javax.swing.JComboBox<String> jComboBoxSeleccion;
    private javax.swing.JComboBox<String> jComboBoxTipo;
    private javax.swing.JLabel jLabelCruce;
    private javax.swing.JLabel jLabelCruceporcentaje;
    private javax.swing.JLabel jLabelElite;
    private javax.swing.JLabel jLabelGeneraciones;
    private javax.swing.JLabel jLabelPoblacion;
    private javax.swing.JLabel jLabelPrecisión;
    private javax.swing.JLabel jLabelProbMutacion;
    private javax.swing.JLabel jLabelProblema;
    private javax.swing.JLabel jLabelSeleccion;
    private javax.swing.JLabel jLabelTipo;
    private javax.swing.JLabel jLabelTipo1;
    private javax.swing.JTextField jTextFieldCruceporcentaje;
    private javax.swing.JTextField jTextFieldError;
    private javax.swing.JTextField jTextFieldGeneraciones;
    private javax.swing.JTextField jTextFieldPoblacion;
    private javax.swing.JTextField jTextFieldProbMutacion;
    private javax.swing.JTextField jTextFieldElite;
    // End of variables declaration                   
}
